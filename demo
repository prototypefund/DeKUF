#!/usr/bin/env python3

import os
import sys

def docker_exec(service, cmd):
    os.system(f"docker compose exec {service} bash -c '{cmd}'")

def client_exec(cmd):
    docker_exec("client", cmd)

def server_exec(cmd):
    docker_exec("server-web", cmd)

def server_django_shell_exec(code):
    server_exec("poetry run ./manage.py shell -c '" + code + "'")

def client_init():
    # TODO: Send more reasonable data - different for each client.
    client_exec(". ./dbus-env.sh && dbus-send --type=method_call "
                "--dest=org.privact.client / "
                "org.privact.client.Data.submit_data_point "
                "string:foo string:bar")


def server_init():
    # TODO: Reset a previously initialised server first.
    # TODO: Also create the survey/queries.
    # TODO: Move admin user creation to the Dockerfile.
    server_django_shell_exec("""
from django.contrib.auth.models import User
User.objects.create_superuser("admin", "", "dekuf")
""")

commands = {
    "server-init": server_init,
    "client-init": client_init
}

def show_usage():
    print(f"Usage: {sys.argv[0]} {'|'.join(commands.keys())}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        show_usage()
        sys.exit(1)
    command = sys.argv[1]
    if command not in commands:
        show_usage()
        sys.exit(2)

    commands[command]()
