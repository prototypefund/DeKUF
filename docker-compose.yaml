services:
    server-web:
        environment:
            - "DATABASE_URL=postgresql://dekufserver:dekufserver@db/dekufserver"
        build: server
        depends_on:
            server-db:
                condition: service_healthy
        command: >
            sh -c "poetry run ./manage.py migrate &&
                   poetry run ./manage.py runserver 0.0.0.0:8000"
        ports:
            - "8080:8000"

    server-db:
        image: postgres:15
        volumes:
            - server_postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=dekufserver
            - POSTGRES_PASSWORD=dekufserver
            - POSTGRES_DB=dekufserver
            # Used for the healthcheck
            - PGUSER=dekufserver
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s

    # TODO: Ensure client can connect to the server.
    # TODO: Spawn multiple clients.
    client:
        build: client
        command: >
            sh -c 'echo "export $(dbus-launch)" > dbus-env.sh
                   . ./dbus-env.sh
                   make run-daemon'

volumes:
    server_postgres_data:
